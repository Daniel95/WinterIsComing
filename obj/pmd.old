<?xml version="1.0" encoding="UTF-8"?>
<pmd version="4.2.1" timestamp="Tue Jun 09 10:12:34 CEST 2015">
   <file name="C:/Users/david/Dropbox/Asteroid/Script/src/HowToPlay.as">
      <violation beginline="16" endline="16" begincolumn="3" endcolumn="3" rule="adobe.ac.pmd.rules.css.UseCssInsteadOfEmbedMetaData" ruleset="All Flex Rules" package="" class="HowToPlay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Embed metadata detected in source code where a stylesheet may be cleaner. </violation>
      <violation beginline="20" endline="20" begincolumn="3" endcolumn="3" rule="adobe.ac.pmd.rules.css.UseCssInsteadOfEmbedMetaData" ruleset="All Flex Rules" package="" class="HowToPlay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Embed metadata detected in source code where a stylesheet may be cleaner. </violation>
      <violation beginline="24" endline="24" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="" class="HowToPlay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="24" endline="24" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.style.ConstructorNonEmptyReturnType" ruleset="All Flex Rules" package="" class="HowToPlay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A constructor should not have a return type. Even if this is syntactically correct, there should not be a return type for a constructor</violation>
   </file>
   <file name="C:/Users/david/Dropbox/Asteroid/Script/src/mainMenu.as">
      <violation beginline="15" endline="15" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="mainMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 17 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="26" endline="26" begincolumn="3" endcolumn="3" rule="adobe.ac.pmd.rules.css.UseCssInsteadOfEmbedMetaData" ruleset="All Flex Rules" package="" class="mainMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Embed metadata detected in source code where a stylesheet may be cleaner. </violation>
      <violation beginline="43" endline="43" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="" class="mainMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (forrestStyle) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="46" endline="46" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="" class="mainMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="46" endline="46" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.style.ConstructorNonEmptyReturnType" ruleset="All Flex Rules" package="" class="mainMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A constructor should not have a return type. Even if this is syntactically correct, there should not be a return type for a constructor</violation>
      <violation beginline="54" endline="54" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="mainMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 41 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="138" endline="138" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.CyclomaticComplexity" ruleset="All Flex Rules" package="" class="mainMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is too complex. Maximum complexity is 15, but its cyclomatic complexity was 20. </violation>
      <violation beginline="138" endline="138" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="mainMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 42 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="144" endline="144" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.maintanability.TrueFalseCondition" ruleset="All Flex Rules" package="" class="mainMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This test contains a hard coded boolean value. You could remove it by having '!condition'. </violation>
   </file>
   <file name="C:/Users/david/Dropbox/Asteroid/Script/src/ShootEvent.as">
      <violation beginline="9" endline="9" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.event.EventMissingCloneFunction" ruleset="All Flex Rules" package="" class="ShootEvent.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">The clone event must be overiden in a custom event. When creating your own custom Event class, you must override the inherited Event.clone() method in order for it to duplicate the properties of your custom class. If you do not set all the properties that you add in your event subclass, those properties will not have the correct values when the event is cloned. This is important because the Flex SDK clones events whenever redispatching takes place</violation>
      <violation beginline="11" endline="11" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.event.PublicVariableInCustomEvent" ruleset="All Flex Rules" package="" class="ShootEvent.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">No public variables should be inside a custom event. This variable (shooter) is public. In order to improve encapsulation in your custom event, it is better not to have public variable in your event. Prefer having read-only attributes, set by the event constructor</violation>
   </file>
   <file name="C:/Users/david/Dropbox/Asteroid/Script/src/Main.as">
      <violation beginline="108" endline="108" begincolumn="0" endcolumn="56" rule="adobe.ac.pmd.rules.event.ListenForHardCodedEventName" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">addEventListener must not contain hard coded strings. You should not listen for a plain string. If you rename this string, you need to replace the string listener as well. Use constants instead</violation>
      <violation beginline="283" endline="283" begincolumn="0" endcolumn="60" rule="adobe.ac.pmd.rules.event.ListenForHardCodedEventName" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">addEventListener must not contain hard coded strings. You should not listen for a plain string. If you rename this string, you need to replace the string listener as well. Use constants instead</violation>
   </file>
   <file name="C:/Users/david/Dropbox/Asteroid/Script/src/Fireball.as">
      <violation beginline="27" endline="27" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="" class="Fireball.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (s) of this function is not used. </violation>
      <violation beginline="10" endline="10" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="Fireball.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 8 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="68" endline="68" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.maintanability.TrueFalseCondition" ruleset="All Flex Rules" package="" class="Fireball.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This test contains a hard coded boolean value. You could remove it by having 'condition'. </violation>
   </file>
   <file name="C:/Users/david/Dropbox/Asteroid/Script/src/MoveInScreenBase.as">
      <violation beginline="37" endline="37" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.maintanability.TrueFalseCondition" ruleset="All Flex Rules" package="" class="MoveInScreenBase.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This test contains a hard coded boolean value. You could remove it by having '!condition'. </violation>
   </file>
   <file name="C:/Users/david/Dropbox/Asteroid/Script/src/Player.as">
      <violation beginline="141" endline="141" begincolumn="5" endcolumn="5" rule="adobe.ac.pmd.rules.maintanability.EmptyStatement" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This statement is empty. </violation>
      <violation beginline="14" endline="14" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 14 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="14" endline="14" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 33 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="35" endline="35" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (barLives) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="151" endline="151" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.maintanability.TrueFalseCondition" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This test contains a hard coded boolean value. You could remove it by having 'condition'. </violation>
      <violation beginline="153" endline="153" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.maintanability.TrueFalseCondition" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This test contains a hard coded boolean value. You could remove it by having '!condition'. </violation>
      <violation beginline="155" endline="155" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="161" endline="161" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="171" endline="171" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="182" endline="182" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.performance.CyclomaticComplexity" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is too complex. Maximum complexity is 15, but its cyclomatic complexity was 25. </violation>
      <violation beginline="182" endline="182" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 44 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="185" endline="185" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.maintanability.TrueFalseCondition" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This test contains a hard coded boolean value. You could remove it by having 'condition'. </violation>
      <violation beginline="199" endline="199" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="215" endline="215" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="253" endline="253" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
   </file>
   <file name="C:/Users/david/Dropbox/Asteroid/Script/src/Wall.as">
      <violation beginline="14" endline="14" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.unused.UnusedField" ruleset="All Flex Rules" package="" class="Wall.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This private attribute (wall) does not seem to be used. </violation>
      <violation beginline="16" endline="16" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="" class="Wall.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (treeImage2). </violation>
      <violation beginline="17" endline="17" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="" class="Wall.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (wallRandomArt) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="30" endline="30" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.maintanability.TrueFalseCondition" ruleset="All Flex Rules" package="" class="Wall.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This test contains a hard coded boolean value. You could remove it by having '!condition'. </violation>
      <violation beginline="32" endline="32" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.maintanability.TrueFalseCondition" ruleset="All Flex Rules" package="" class="Wall.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This test contains a hard coded boolean value. You could remove it by having 'condition'. </violation>
   </file>
   <file name="C:/Users/david/Dropbox/Asteroid/Script/src/Arrow.as">
      <violation beginline="90" endline="90" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="Arrow.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="12" endline="12" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="" class="Arrow.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 11 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="12" endline="12" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="Arrow.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 17 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
   </file>
   <file name="C:/Users/david/Dropbox/Asteroid/Script/src/Maths.as">
      <violation beginline="17" endline="17" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="Maths.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="17" endline="17" begincolumn="47" endcolumn="47" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="Maths.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="29" endline="29" begincolumn="42" endcolumn="42" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="Maths.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="29" endline="29" begincolumn="58" endcolumn="58" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="Maths.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="44" endline="44" begincolumn="41" endcolumn="41" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="Maths.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="44" endline="44" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="Maths.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="17" endline="17" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="" class="Maths.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (obj1). </violation>
      <violation beginline="17" endline="17" begincolumn="47" endcolumn="47" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="" class="Maths.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (obj2). </violation>
      <violation beginline="29" endline="29" begincolumn="42" endcolumn="42" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="" class="Maths.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (object1). </violation>
      <violation beginline="29" endline="29" begincolumn="58" endcolumn="58" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="" class="Maths.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (object2). </violation>
      <violation beginline="29" endline="29" begincolumn="42" endcolumn="42" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="" class="Maths.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (object1) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="29" endline="29" begincolumn="58" endcolumn="58" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="" class="Maths.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (object2) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="44" endline="44" begincolumn="41" endcolumn="41" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="" class="Maths.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (obj1). </violation>
      <violation beginline="44" endline="44" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="" class="Maths.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (obj2). </violation>
   </file>
   <file name="C:/Users/david/Dropbox/Asteroid/Script/src/Wildling.as">
      <violation beginline="20" endline="20" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="" class="Wildling.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="27" endline="27" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.PropertyHiddenByLocalVariable" ruleset="All Flex Rules" package="" class="Wildling.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A class property is hidden by this local variable (randomAttack). </violation>
      <violation beginline="72" endline="72" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="Wildling.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
   </file>
   <file name="C:/Users/david/Dropbox/Asteroid/Script/src/TheGame.as">
      <violation beginline="14" endline="14" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="" class="TheGame.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="14" endline="14" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.style.ConstructorNonEmptyReturnType" ruleset="All Flex Rules" package="" class="TheGame.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A constructor should not have a return type. Even if this is syntactically correct, there should not be a return type for a constructor</violation>
   </file>
   <file name="C:/Users/david/Dropbox/Asteroid/Script/src/RotateBase.as">
      <violation beginline="11" endline="11" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="" class="RotateBase.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 16 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="11" endline="11" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="RotateBase.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 18 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="78" endline="78" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="RotateBase.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="85" endline="85" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="RotateBase.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
   </file>
   <file name="C:/Users/david/Dropbox/Asteroid/Script/src/Skeleton.as">
      <violation beginline="40" endline="40" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="Skeleton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="42" endline="42" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="Skeleton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
   </file>
   <file name="C:/Users/david/Dropbox/Asteroid/Script/src/Summoner.as">
      <violation beginline="40" endline="40" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="Summoner.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
   </file>
   <file name="C:/Users/david/Dropbox/Asteroid/Script/src/Walker.as">
      <violation beginline="41" endline="41" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="Walker.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="43" endline="43" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="Walker.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
   </file>
   <file name="C:/Users/david/Dropbox/Asteroid/Script/src/mainRetry.as">
      <violation beginline="21" endline="21" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.style.ConstructorNonEmptyReturnType" ruleset="All Flex Rules" package="" class="mainRetry.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A constructor should not have a return type. Even if this is syntactically correct, there should not be a return type for a constructor</violation>
   </file>
</pmd>
